// **********************************************************************
// Parsed By TarsParser(1.1.0), Generated By tools(20180620)
// TarsParser Maintained By <WSRD> and tools Maintained By <superzheng>
// Generated from "UserInfoService.tars" by Structure Mode
// **********************************************************************

"use strict";

var assert    = require("assert");
var TarsStream = require("@tars/stream");

var LifeService = LifeService || {};
module.exports.LifeService = LifeService;

LifeService.UserInfo = function() {
    this.name = "";
    this.phone = "";
    this.gender = "";
    this.registration_time = "";
    this.group = new TarsStream.Map(TarsStream.Int32, TarsStream.String);
    this._classname = "LifeService.UserInfo";
};
LifeService.UserInfo._classname = "LifeService.UserInfo";
LifeService.UserInfo._write = function (os, tag, value) { os.writeStruct(tag, value); };
LifeService.UserInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
LifeService.UserInfo._readFrom = function (is) {
    var tmp = new LifeService.UserInfo();
    tmp.name = is.readString(0, true, "");
    tmp.phone = is.readString(1, true, "");
    tmp.gender = is.readString(2, true, "");
    tmp.registration_time = is.readString(3, true, "");
    tmp.group = is.readMap(4, true, TarsStream.Map(TarsStream.Int32, TarsStream.String));
    return tmp;
};
LifeService.UserInfo.prototype._writeTo = function (os) {
    os.writeString(0, this.name);
    os.writeString(1, this.phone);
    os.writeString(2, this.gender);
    os.writeString(3, this.registration_time);
    os.writeMap(4, this.group);
};
LifeService.UserInfo.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
LifeService.UserInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
LifeService.UserInfo.prototype.toObject = function() { 
    return {
        "name" : this.name,
        "phone" : this.phone,
        "gender" : this.gender,
        "registration_time" : this.registration_time,
        "group" : this.group.toObject()
    };
};
LifeService.UserInfo.prototype.readFromObject = function(json) { 
    json.hasOwnProperty("name") && (this.name = json.name);
    json.hasOwnProperty("phone") && (this.phone = json.phone);
    json.hasOwnProperty("gender") && (this.gender = json.gender);
    json.hasOwnProperty("registration_time") && (this.registration_time = json.registration_time);
    json.hasOwnProperty("group") && (this.group.readFromObject(json.group));
};
LifeService.UserInfo.prototype.toBinBuffer = function () {
    var os = new TarsStream.TarsOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
LifeService.UserInfo.new = function () {
    return new LifeService.UserInfo();
};
LifeService.UserInfo.create = function (is) {
    return LifeService.UserInfo._readFrom(is);
};



